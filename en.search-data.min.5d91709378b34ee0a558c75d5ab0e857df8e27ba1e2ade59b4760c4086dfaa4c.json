[{"id":0,"href":"/LSUClient-docs/docs/getting-started/examples/","title":"Examples","section":"Docs","content":"Examples #  Get available updates #  Get-LSUpdate Get and install available updates #  $updates = Get-LSUpdate $updates | Install-LSUpdate -Verbose Install only packages that can be installed silently and non-interactively #  $updates = Get-LSUpdate | Where-Object { $_.Installer.Unattended } $updates | Save-LSUpdate -Verbose $updates | Install-LSUpdate -Verbose Filtering out non-unattended packages like this is strongly recommended when using this module in MDT, SCCM, PDQ, remote execution via PowerShell Remoting, ssh or any other situation in which you run these commands remotely or as part of an automated process. Packages with installers that are not unattended may force reboots or attempt to start a GUI setup on the machine and, if successful, halt until someone clicks through the dialogs.\nGet all available packages #  $updates = Get-LSUpdate -All By default, Get-LSUpdate only returns \u0026ldquo;needed\u0026rdquo; updates. Needed updates are those that are applicable to the system and not yet installed. If you want to retrieve all available packages instead, use Get-LSUpdate -All. To filter out unneeded packages later, just look at the IsApplicable and IsInstalled properties. The default logic is equivalent to: Get-LSUpdate -All | Where-Object { $_.IsApplicable -and -not $_.IsInstalled }\nDownload drivers for another computer #  Get-LSUpdate -Model 20LS -All | Save-LSUpdate -Path \u0026#39;C:\\Drivers\\20LS\u0026#39; -ShowProgress Using the -Model parameter of Get-LSUpdate you can retrieve packages for another computer model. In this case you almost always want to use -All too so that the packages found are not filtered against your computer and all packages are downloaded.\n For more details, available parameters and guidance on how to use them run Get-Help -Detailed on the functions in this module.\n"}]